/*
 * В этой задаче вам нужно присваивать номера автобусным маршрутам.
 * А именно, для каждого маршрута, заданного набором названий остановок, нужно
 * либо выдать новый номер (первому маршруту — 1, второму — 2 и т. д.), либо
 * вернуть номер существующего маршрута, которому соответствует такой набор
 * остановок.
 * Наборы остановок, полученные друг из друга перестановкой остановок, считаются
 * различными (см. пример).
 *
 * Формат ввода:
 * Сначала вводится количество запросов Q, затем Q описаний запросов.
 * Каждый запрос представляет собой положительное количество остановок N, за
 * которым следуют разделённые пробелом N различных названий остановок
 * соответствующего маршрута. Названия остановок состоят лишь из латинских букв
 * и символов подчёркивания.
 *
 * Формат вывода:
 * Выведите ответ на каждый запрос в отдельной строке.
 * Если маршрут с данным набором остановок уже существует, в ответ на
 * соответствующий запрос выведите Already exists for i, где i — номер маршрута
 * с таким набором остановок. В противном случае нужно выделить введённому
 * набору остановок новый номер i и вывести его в формате New bus i.
 */
#include <iostream>
#include <map>
#include <vector>

using namespace std;

int main() {
  // key - bus stops
  // value - unique bus number
  map<vector<string>, size_t> stops_to_bus;

  int q;
  cin >> q;
  for (int j = 0; j < q; ++j) {
    int n;
    cin >> n;

    vector<string> stops(n);
    for (auto& s : stops) {
      cin >> s;
    }

    if (stops_to_bus.count(stops) == 1) {
      cout << "Already exists for " << stops_to_bus[stops] << endl;
    } else {
      size_t i = stops_to_bus.size() + 1;
      stops_to_bus[stops] = i;
      cout << "New bus " << i << endl;
    }
  }
}
